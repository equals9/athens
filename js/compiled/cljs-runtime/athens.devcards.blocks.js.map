{"version":3,"sources":["athens/devcards/blocks.cljs"],"mappings":"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","names":["athens.devcards.blocks/block-style","athens.devcards.blocks/block-disclosure-toggle-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","athens.devcards.blocks/block-indicator-style","G__65779","garden.selectors/&","garden.selectors/after","athens.style/OPACITIES","G__65780","garden.selectors/before","G__65781","stylefy.core.keyframes.cljs$core$IFn$_invoke$arity$variadic","athens.devcards.blocks/drop-area-indicator","athens.devcards.blocks/block-content-style","athens.devcards.blocks/tooltip-style","athens.style/DEPTH-SHADOWS","athens.style.color.cljs$core$IFn$_invoke$arity$2","athens.devcards.blocks/block-component","ident","block","athens.db/get-block-document","athens.devcards.blocks/block-el","athens.devcards.blocks/placeholder-block-el","uid","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","komponentit.autosize/textarea","_","G__65782","re-frame.core/dispatch","p__65783","map__65784","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","string","open","order","children","dbid","cljs.core/deref","map__65786","open?","and__4174__auto__","cljs.core/seq","closed?","cljs.core/not","editing-uid","G__65787","re-frame.core/subscribe","tooltip-uid","G__65788","x","y","dragging-uid","closest-uid","closest-kind","G__65789","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","athens.devcards.blocks/dragging-style","clojure.string.join.cljs$core$IFn$_invoke$arity$2","G__65791","G__65792","athens.devcards.blocks/toggle","js/module$node_modules$$material_ui$icons$index.KeyboardArrowDown","athens.router.navigate_uid.cljs$core$IFn$_invoke$arity$1","e","G__65793","G__65794","athens.devcards.blocks/db-on-change","athens.devcards.blocks/on-key-down","athens.parse-renderer/parse-and-render","iter__4582__auto__","s__65796","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__65798","cljs.core/chunk-buffer","i__65797","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__65795","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","child","athens.devcards.blocks/on-change","val","G__65799","goog.functions/debounce","id","G__65800","key","shift","sel-start","goog.events.KeyCodes/TAB","G__65801","G__65802","goog.events.KeyCodes/ENTER","G__65803","goog.events.KeyCodes/BACKSPACE","G__65804","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.blocks\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.parse-renderer :refer [parse-and-render]]\n    [athens.router :refer [navigate-uid]]\n    [athens.style :refer [color DEPTH-SHADOWS OPACITIES]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [clojure.string :refer [join]]\n    [devcards.core :refer-macros [defcard-rg]]\n    [garden.selectors :as selectors]\n    [goog.functions :refer [debounce]]\n    [komponentit.autosize :as autosize]\n    [re-frame.core  :refer [dispatch subscribe]]\n    [stylefy.core :as stylefy :refer [use-style]])\n  (:import\n    (goog.events\n      KeyCodes)))\n\n\n;;; Styles\n\n\n(def block-style\n  {:display \"flex\"\n   :line-height \"2em\"\n   :position \"relative\"\n   :justify-content \"flex-start\"\n   :flex-direction \"column\"})\n\n\n(def block-disclosure-toggle-style\n  {:width \"1em\"\n   :height \"2em\"\n   :flex-shrink \"0\"\n   :display \"flex\"\n   :background \"none\"\n   :border \"none\"\n   :border-radius \"100px\"\n   :transition \"all 0.05s ease\"\n   :align-items \"center\"\n   :justify-content \"center\"\n   :padding \"0\"\n   :-webkit-appearance \"none\"\n   ::stylefy/mode [[:hover {:color (color :link-color)}]\n                   [\":is(button)\" {:cursor \"pointer\"}]]\n   ::stylefy/manual [[:&.closed [:svg {:transform \"rotate(-90deg)\"}]]]})\n\n\n(def block-indicator-style\n  {:flex-shrink \"0\"\n   :cursor \"pointer\"\n   :width \"0.75em\"\n   :margin-right \"0.25em\"\n   :transition \"all 0.05s ease\"\n   :height \"2em\"\n   :color (color :panel-color)\n   ::stylefy/mode [[:after {:content \"''\"\n                            :background \"currentColor\"\n                            :transition \"all 0.05s ease\"\n                            :border-radius \"100px\"\n                            :box-shadow \"0 0 0 2px transparent\"\n                            :display \"inline-flex\"\n                            :margin \"50% 0 0 50%\"\n                            :transform \"translate(-50%, -50%)\"\n                            :height \"0.3125em\"\n                            :width \"0.3125em\"}]\n                   [:hover {:color (color :link-color)}]]\n\n   ::stylefy/manual [[:&.open {}]\n                     [:&.closed {}]\n                     [:&.closed [(selectors/& (selectors/after)) {:box-shadow (str \"0 0 0 2px \" (color :body-text-color))\n                                                                  :opacity (:opacity-med OPACITIES)}]]\n                     [:&.closed [(selectors/& (selectors/before)) {:content \"none\"}]]\n                     [:&.closed [(selectors/& (selectors/before)) {:content \"none\"}]]\n                     [:&:hover:after {:transform \"translate(-50%, -50%) scale(1.3)\"}]\n                     [:&.dragging {:z-index \"1000\"\n                                   :cursor \"grabbing\"\n                                   :color (color :body-text-color)}]\n                     [:&.selected {}]]})\n\n\n(stylefy/keyframes \"drop-area-appear\"\n                   [:from\n                    {:opacity \"0\"}]\n                   [:to\n                    {:opacity \"1\"}])\n\n\n(stylefy/keyframes \"drop-area-color-pulse\"\n                   [:from\n                    {:opacity (:opacity-lower OPACITIES)}]\n                   [:to\n                    {:opacity (:opacity-med OPACITIES)}])\n\n\n(def drop-area-indicator\n  {:display \"block\"\n   :height \"1px\"\n   :margin-bottom \"-1px\"\n   :color (color :body-text-color)\n   :position \"relative\"\n   :transform-origin \"left\"\n   :z-index \"1000\"\n   :width \"100%\"\n   :animation \"drop-area-appear .5s ease\"\n   ::stylefy/manual [[:&:after {:position \"absolute\"\n                                :content \"''\"\n                                :top \"-0.5px\"\n                                :right \"0\"\n                                :bottom \"-0.5px\"\n                                :left \"0\"\n                                :border-radius \"100px\"\n                                :animation \"drop-area-color-pulse 1s ease infinite alternate\"\n                                :background \"currentColor\"}]]})\n\n\n(def block-content-style\n  {:position \"relative\"\n   :overflow \"visible\"\n   :z-index \"1\"\n   :flex-grow \"1\"\n   :word-break \"break-word\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor \"text\"\n                                 :resize \"none\"\n                                 :transform \"translate3d(0,0,0)\"\n                                 :color \"inherit\"\n                                 :padding \"0\"\n                                 :background (color :panel-color)\n                                 :position \"absolute\"\n                                 :top \"0\"\n                                 :left \"0\"\n                                 :right \"0\"\n                                 :width \"100%\"\n                                 :min-height \"100%\"\n                                 :caret-color (color :link-color)\n                                 :margin \"0\"\n                                 :font-size \"inherit\"\n                                 :line-height \"inherit\"\n                                 :border-radius \"4px\"\n                                 :transition \"opacity 0.15s ease\"\n                                 :box-shadow (str \"-4px 0 0 0\" (color :panel-color))\n                                 :border \"0\"\n                                 :opacity \"0\"\n                                 :font-family \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index \"10\"\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [:span [:span\n                             :a {:position \"relative\"\n                                 :z-index \"2\"}]]]})\n\n\n(stylefy/keyframes \"tooltip-appear\"\n                   [:from\n                    {:opacity \"0\"\n                     :transform \"scale(0)\"}]\n                   [:to\n                    {:opacity \"1\"\n                     :transform \"scale(1)\"}])\n\n\n(def tooltip-style\n  {:z-index    2\n   :position \"absolute\"\n   :box-shadow [[(:64 DEPTH-SHADOWS) \", 0 0 0 1px \" (color :body-text-color :opacity-lower)]]\n   :flex-direction \"column\"\n   :background-color \"white\"\n   :padding \"8px 12px\"\n   :border-radius \"4px\"\n   :line-height \"24px\"\n   :left \"8px\"\n   :top \"32px\"\n   :transform-origin \"8px 24px\"\n   :min-width \"150px\"\n   :animation \"tooltip-appear .2s ease\"\n   :transition \"background .1s ease\"\n   :display \"table\"\n   :color (color :body-text-color :opacity-high)\n   :border-spacing \"4px\"\n   ::stylefy/manual [[:div {:display \"table-row\"}]\n                     [:b {:display \"table-cell\"\n                          :user-select \"none\"\n                          :text-align \"right\"\n                          :text-transform \"uppercase\"\n                          :font-size \"12px\"\n                          :letter-spacing \"0.1em\"\n                          :opacity (:opacity-med OPACITIES)}]\n                     [:span {:display \"table-cell\"\n                             :user-select \"all\"}\n                      [:&:hover {:color (color :header-text-color)}]]\n                     [:&:after {:content \"''\"\n                                :position \"absolute\"\n                                :top \"-12px\"\n                                :bottom \"-16px\"\n                                :border-radius \"inherit\"\n                                :left \"-16px\"\n                                :right \"-16px\"\n                                :z-index -1\n                                :display \"block\"}]]})\n\n\n(def dragging-style)\n  ;;{:background-color \"lightblue\"})\n\n\n\n;;; Components\n\n\n(declare block-component block-el toggle on-key-down db-on-change)\n\n\n(defn block-component\n  [ident]\n  (let [block (db/get-block-document ident)]\n    [block-el block]))\n\n\n(defn placeholder-block-el\n  [uid]\n  [:div (use-style block-style)\n   [:div {:style {:display \"flex\"}}\n\n    [:span (use-style block-indicator-style {:class \"bullet\"})]\n\n    ;; Actual Contents\n    [:div (use-style block-content-style {:class \"block-contents\"})\n     [autosize/textarea {:placeholder \"Click to begin editing\"\n                         :auto-focus  true\n                         :on-click (fn [_] (dispatch [:page/create-first-child uid]))}]]]])\n\n\n;; TODO: more clarity on open? and closed? predicates, why we use `cond` in one case and `if` in another case\n(defn block-el\n  \"Two checks to make sure block is open or not: children exist and :block/open bool\"\n  [{:block/keys [uid string open order children] dbid :db/id}]\n  (let [open?       (and (seq children) open)\n        closed?     (and (seq children) (not open))\n        editing-uid @(subscribe [:editing/uid])\n        tooltip-uid @(subscribe [:tooltip/uid])\n        {:keys        [x y]\n         dragging-uid :uid\n         closest-uid  :closest/uid\n         closest-kind :closest/kind} @(subscribe [:drag-bullet])]\n\n    [:div (use-style (merge block-style\n                            (when (= dragging-uid uid) dragging-style))\n                     {:class    (join \" \" [\"block-container\" (when (= dragging-uid uid) \"dragging\")])\n                      :data-uid uid})\n     [:div {:style {:display \"flex\"}}\n\n      ;; Toggle\n      (if (seq children)\n        [:button (use-style block-disclosure-toggle-style\n                            {:class (cond open? \"open\" closed? \"closed\")\n                             :on-click #(toggle [:block/uid uid] open)})\n         [:> mui-icons/KeyboardArrowDown {:style {:font-size \"16px\"}}]]\n        [:span (use-style block-disclosure-toggle-style)])\n\n      ;; Bullet\n      (if (= dragging-uid uid)\n        [:span (merge (use-style block-indicator-style\n                                 {:class    (join \" \" [\"bullet\" \"dragging\" (if closed? \"closed\" \"open\")])\n                                  :data-uid uid})\n                      {:style {:transform (str \"translate(\" x \"px, \" y \"px)\")}})]\n\n        [:span (use-style block-indicator-style\n                          {:class    (str \"bullet \" (if closed? \"closed\" \"open\"))\n                           :data-uid uid\n                           :on-click #(navigate-uid uid)})])\n\n      ;; Tooltip\n      (when (and (= tooltip-uid uid)\n                 (not dragging-uid))\n        [:div (use-style tooltip-style {:class \"tooltip\"})\n         [:div [:b \"db/id\"] [:span dbid]]\n         [:div [:b \"uid\"] [:span uid]]\n         [:div [:b \"order\"] [:span order]]])\n\n      ;; Actual Contents\n      [:div (use-style (merge block-content-style {:user-select (when dragging-uid \"none\")})\n                       {:class    \"block-contents\"\n                        :data-uid uid})\n       [autosize/textarea {:default-value       string\n                           :class       (when (= editing-uid uid) \"is-editing\")\n                           :auto-focus  true\n                           :on-change   (fn [e] (db-on-change (.. e -target -value) uid))\n                           :on-key-down (fn [e] (on-key-down e uid))}]\n       [parse-and-render string]\n\n       ;; Drop Indicator\n       (when (and (= closest-uid uid)\n                  (= closest-kind :child))\n         [:span (use-style drop-area-indicator)])]]\n\n     ;; Children\n     (when open?\n       (for [child children]\n         [:div {:style {:margin-left \"32px\"} :key (:db/id child)}\n          [block-el child]]))\n\n     ;; Drop Indicator\n     (when (and (= closest-uid uid) (= closest-kind :sibling))\n       [:span (use-style drop-area-indicator)])]))\n\n;; Helpers\n\n(defn on-change\n  [val uid]\n  (dispatch [:transact [[:db/add [:block/uid uid] :block/string val]]]))\n\n\n(def db-on-change (debounce on-change 500))\n\n\n(defn toggle\n  [id open]\n  (dispatch [:transact [[:db/add id :block/open (not open)]]]))\n\n\n(defn on-key-down\n  [e uid]\n  (let [key       (.. e -keyCode)\n        shift     (.. e -shiftKey)\n        val       (.. e -target -value)\n        sel-start (.. e -target -selectionStart)]\n    (cond\n      (and (= key KeyCodes.TAB) shift) (dispatch [:unindent uid])\n      (= key KeyCodes.TAB) (dispatch [:indent uid])\n      (= key KeyCodes.ENTER) (dispatch [:enter uid val sel-start])\n      (and (= key KeyCodes.BACKSPACE) (zero? sel-start)) (dispatch [:backspace uid]))))\n\n\n;;; Devcards\n\n\n(defcard-rg Block\n  \"Pull entity 2347, a block within Athens FAQ, and its children. Doesn't pull parents, unlike `block-page`\"\n  [block-component 2347])\n"]}