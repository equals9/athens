{"version":3,"sources":["athens/devcards/block_page.cljs"],"mappings":"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","names":["athens.devcards.block-page/datoms","posh.reagent/transact!","athens.db/dsdb","athens.devcards.block-page/block-page-el","block","parents","map__65542","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","string","children","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","iter__4582__auto__","s__65545","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__65547","cljs.core/chunk-buffer","i__65546","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__65544","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","p","map__65548","map__65550","title","uid","athens.router/navigate-uid","or__4185__auto__","s__65553","b__65555","i__65554","iter__65552","child","map__65556","map__65559","id","athens.devcards.blocks/block-el","athens.devcards.block-page/block-page-component","ident","cljs.core/deref","posh.reagent/pull","athens.db/block-pull-pattern","athens.db/parents-pull-pattern","athens.db/shape-parent-query","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.block-page\n  (:require\n    [athens.db :as db]\n    [athens.devcards.blocks :refer [block-el]]\n    [athens.router :refer [navigate-uid]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :refer-macros [defcard-rg]]\n    [posh.reagent :refer [transact! pull]]))\n\n\n;;; Globals\n\n\n(def datoms\n  [{:db/id          2381,\n    :block/uid      \"OaSVyM_nr\",\n    :block/open     true,\n    :node/title     \"Athens FAQ\",\n    :block/children [{:db/id          2158,\n                      :block/uid      \"BjIm6GeRP\",\n                      :block/string   \"Why open-source?\",\n                      :block/open     true,\n                      :block/order    3,\n                      :block/children [{:db/id        2163,\n                                        :block/uid    \"GNaf3XzpE\",\n                                        :block/string \"The short answer is the security and privacy of your data.\",\n                                        :block/open   true,\n                                        :block/order  1}\n                                       {:db/id          2347,\n                                        :block/uid      \"jbiKpcmIX\",\n                                        :block/string   \"Firstly, I wouldn't be surprised if Roam was eventually open-sourced.\",\n                                        :block/open     true,\n                                        :block/order    0,\n                                        :block/children [{:db/id        2176,\n                                                          :block/uid    \"gVINXaN8Y\",\n                                                          :block/string \"Suffice it to say that Roam being open-source is undeniably something that the team has already considered. Why is it not open-source already? You'd have to ask the Roam team, but Roam, a business, is not obligated to open-source anything.\",\n                                                          :block/open   true,\n                                                          :block/order  2}\n                                                         {:db/id          2346,\n                                                          :block/uid      \"ZOxwo0K_7\",\n                                                          :block/string   \"The conclusion of the [[Roam White Paper]] states that Roam's vision is a collective, \\\"open-source\\\" intelligence.\",\n                                                          :block/open     true,\n                                                          :block/order    0,\n                                                          :block/children [{:db/id        2174,\n                                                                            :block/uid    \"WKWPPSYQa\",\n                                                                            :block/string \"((iWmBJaChO))\",\n                                                                            :block/open   true,\n                                                                            :block/order  0}]}\n                                                         {:db/id        2349,\n                                                          :block/uid    \"VQ-ybRmNh\",\n                                                          :block/string \"In the Roam Slack, I recall Conor saying one eventual goal is to work on a protocol that affords interoperability between open source alternatives. I would share the message but can't find it because of Slack's 10k message limit.\",\n                                                          :block/open   true,\n                                                          :block/order  1}\n                                                         {:db/id        2351,\n                                                          :block/uid    \"PGGS8MFH_\",\n                                                          :block/string \"Ultimately, we don't know when/if Roam will be open-sourced, but it's possible that Athens could accelerate or catalyze this. Regardless, there will always be some who are open-source maximalists and some who want to self-host, because that's probably really the most secure thing you can do (if you know what you're doing).\",\n                                                          :block/open   true,\n                                                          :block/order  3}]}]}]}])\n\n\n(transact! db/dsdb datoms)\n\n\n;;; Components\n\n\n;; TODO: replace \" > \" with an icon. Get a TypeError when doing this, though. Maybe same problem as \"->\" issue in Athena results\n(defn block-page-el\n  [block parents]\n  (let [{:block/keys [string children]} block]\n    [:div\n     [:span {:style {:color \"gray\"}}\n      (interpose\n        \" > \"\n        (for [p parents]\n          (let [{:keys [node/title block/uid block/string]} p]\n            [:span {:key uid :style {:cursor \"pointer\"} :on-click #(navigate-uid uid)} (or string title)])))]\n     [:h1 (str \"\u2022 \" string)]\n     [:div (for [child children]\n             (let [{:keys [db/id]} child]\n               ^{:key id} [block-el child]))]]))\n\n\n(defn block-page-component\n  \"\"\n  [ident]\n  (let [block   @(pull db/dsdb db/block-pull-pattern ident)\n        parents (->> @(pull db/dsdb db/parents-pull-pattern ident)\n                     (db/shape-parent-query))]\n    ;;(prn block parents)\n    [block-page-el block parents]))\n\n\n;;; Devcards\n\n\n(defcard-rg Block-Page\n  \"pull entity 2347: a block within Athens FAQ\"\n  [block-page-component 2347])\n"]}