{"version":3,"sources":["athens/views/node_page.cljs"],"mappings":"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","names":["athens.views.node-page/page-style","athens.views.node-page/title-style","athens.style.color","garden.selectors/+","athens.views.node-page/references-style","athens.views.node-page/references-heading-style","athens.views.node-page/references-list-style","athens.views.node-page/references-group-title-style","athens.views.node-page/references-group-style","athens.views.node-page/reference-breadcrumbs-style","athens.views.node-page/references-group-block-style","athens.views.node-page/page-menu-toggle-style","athens.views.node-page/handler","val","uid","re-frame.core/dispatch","athens.views.node-page/db-handler","goog.functions/debounce","athens.views.node-page/is-timeline-page","cljs.core/boolean","e57218","vec__57219","cljs.core.nth","m","d","y","clojure.string.split","tick.alpha.api.date","clojure.string.join","js/Object","_","athens.views.node-page/handle-new-first-child-block-click","parent-uid","new-uid","athens.util/gen-block-uid","now","athens.util/now-ts","athens.views.node-page/placeholder-block-el","stylefy.core.use_style","athens.views.blocks/bullet-style","athens.views.node-page/node-page-el","state","reagent.core.atom","block","editing-uid","ref-groups","timeline-page?","map__57222","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__57223","cljs.core/deref","children","title","is-shortcut?","show","x","e","athens.router.navigate_uid","komponentit.autosize/textarea","cljs.core._EQ_","G__57226","G__57227","athens.views.buttons/button","cljs.core.swap_BANG_","cljs.core/assoc","rect","cljs.core/merge","js/module$node_modules$$material_ui$icons$index.ExpandMore","cljs.core.merge","athens.views.dropdown/dropdown-style","athens.views.dropdown/menu-style","js/module$node_modules$$material_ui$icons$index.BookmarkBorder","js/module$node_modules$$material_ui$icons$index.Bookmark","athens.views.dropdown/menu-separator-style","athens.router/navigate","js/module$node_modules$$material_ui$icons$index.Delete","athens.parse-renderer/parse-and-render","cljs.core/empty?","iter__4529__auto__","s__57229","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__57231","cljs.core/chunk-buffer","i__57230","map__57232","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__57228","cljs.core/chunk-rest","map__57234","cljs.core/first","cljs.core/cons","cljs.core/rest","child","athens.views.blocks/block-el","cljs.core.doall","s__57237","b__57239","i__57238","vec__57240","iter__57236","vec__57301","linked-or-unlinked","refs","cljs.core/not-empty","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.Link","js/module$node_modules$$material_ui$icons$index.FilterList","s__57244","b__57246","i__57245","vec__57247","iter__57243","vec__57274","s__57305","b__57307","i__57306","vec__57308","iter__57304","vec__57335","group-title","group","athens.parse-renderer/pull-node-from-string","s__57251","b__57253","i__57252","map__57254","iter__57250","map__57264","s__57278","b__57280","i__57279","map__57281","iter__57277","map__57291","s__57312","b__57314","i__57313","map__57315","iter__57311","map__57325","s__57339","b__57341","i__57340","map__57342","iter__57338","map__57352","parents","athens.views.breadcrumbs/breadcrumbs-list","js/module$node_modules$$material_ui$icons$index.LocationOn","s__57257","b__57259","i__57258","map__57260","iter__57256","map__57262","s__57267","b__57269","i__57268","map__57270","iter__57266","map__57272","s__57284","b__57286","i__57285","map__57287","iter__57283","map__57289","s__57294","b__57296","i__57295","map__57297","iter__57293","map__57299","s__57318","b__57320","i__57319","map__57321","iter__57317","map__57323","s__57328","b__57330","i__57329","map__57331","iter__57327","map__57333","s__57345","b__57347","i__57346","map__57348","iter__57344","map__57350","s__57355","b__57357","i__57356","map__57358","iter__57354","map__57360","string","athens.views.breadcrumbs/breadcrumb","or__4126__auto__","athens.views.node-page/node-page-component","ident","map__57362","node","athens.db/get-node-document","re_frame.core.subscribe","clojure.string/blank?","athens.db/get-linked-references","athens.util/escape-str","athens.db/get-unlinked-references","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.node-page\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db :refer [get-linked-references get-unlinked-references]]\n    [athens.parse-renderer :as parse-renderer :refer [pull-node-from-string]]\n    [athens.router :refer [navigate-uid navigate]]\n    [athens.style :refer [color]]\n    [athens.util :refer [now-ts gen-block-uid escape-str]]\n    [athens.views.blocks :refer [block-el bullet-style]]\n    [athens.views.breadcrumbs :refer [breadcrumbs-list breadcrumb]]\n    [athens.views.buttons :refer [button]]\n    [athens.views.dropdown :refer [dropdown-style menu-style menu-separator-style]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [clojure.string :as string]\n    [garden.selectors :as selectors]\n    [goog.functions :refer [debounce]]\n    [komponentit.autosize :as autosize]\n    [re-frame.core :refer [dispatch subscribe]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]\n    [tick.alpha.api :as t]))\n\n\n;;; Styles\n\n\n(def page-style\n  {:margin \"2rem auto\"\n   :padding \"1rem 2rem\"\n   :flex-basis \"100%\"\n   :max-width \"55rem\"})\n\n\n(def title-style\n  {:position \"relative\"\n   :overflow \"visible\"\n   :flex-grow \"1\"\n   :margin \"0.2em 0 0.2em 1rem\"\n   :letter-spacing \"-0.03em\"\n   :word-break \"break-word\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor \"text\"\n                                 :resize \"none\"\n                                 :transform \"translate3d(0,0,0)\"\n                                 :color \"inherit\"\n                                 :font-weight \"inherit\"\n                                 :padding \"0\"\n                                 :letter-spacing \"inherit\"\n                                 :position \"absolute\"\n                                 :top \"0\"\n                                 :left \"0\"\n                                 :right \"0\"\n                                 :width \"100%\"\n                                 :min-height \"100%\"\n                                 :caret-color (color :link-color)\n                                 :background \"transparent\"\n                                 :margin \"0\"\n                                 :font-size \"inherit\"\n                                 :line-height \"inherit\"\n                                 :border-radius \"0.25rem\"\n                                 :transition \"opacity 0.15s ease\"\n                                 :border \"0\"\n                                 :opacity \"0\"\n                                 :font-family \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index 3\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [(selectors/+ :.is-editing :span) {:opacity 0}]]})\n\n\n(def references-style {:margin-block \"3em\"})\n\n\n(def references-heading-style\n  {:font-weight \"normal\"\n   :display \"flex\"\n   :padding \"0 2rem\"\n   :align-items \"center\"\n   ::stylefy/manual [[:svg {:margin-right \"0.25em\"\n                            :font-size \"1rem\"}]\n                     [:span {:flex \"1 1 100%\"}]]})\n\n\n(def references-list-style\n  {:font-size \"14px\"})\n\n\n(def references-group-title-style\n  {:color (color :link-color)\n   :margin \"0 1.5rem\"\n   :font-weight \"500\"\n   ::stylefy/manual [[:a:hover {:cursor \"pointer\"\n                                :text-decoration \"underline\"}]]})\n\n\n(def references-group-style\n  {:background (color :background-minus-2 :opacity-med)\n   :padding \"1rem 0.5rem\"\n   :border-radius \"0.25rem\"\n   :margin \"0.5em 0\"})\n\n\n(def reference-breadcrumbs-style\n  {:font-size \"12px\"\n   :padding \"0.25rem calc(2rem - 0.5em)\"})\n\n\n(def references-group-block-style\n  {:border-top [[\"1px solid \" (color :border-color)]]\n   :padding-block-start \"1em\"\n   :margin-block-start \"1em\"\n   ::stylefy/manual [[:&:first-of-type {:border-top \"0\"\n                                        :margin-block-start \"0\"}]]})\n\n\n(def page-menu-toggle-style\n  {:position \"absolute\"\n   :left \"-0.5rem\"\n   :border-radius \"1000px\"\n   :padding \"0.375rem 0.5rem\"\n   :color (color :body-text-color :opacity-high)\n   :top \"50%\"\n   :transform \"translate(-100%, -50%)\"})\n\n\n;;; Helpers\n\n\n(defn handler\n  [val uid]\n  (dispatch [:transact [[:db/add [:block/uid uid] :node/title val]]]))\n\n\n(def db-handler (debounce handler 500))\n\n\n(defn is-timeline-page\n  [uid]\n  (boolean\n    (try\n      (let [[m d y] (string/split uid \"-\")]\n        (t/date (string/join \"-\" [y m d])))\n      (catch js/Object _ false))))\n\n\n(defn handle-new-first-child-block-click\n  [parent-uid]\n  (let [new-uid   (gen-block-uid)\n        now       (now-ts)]\n    (dispatch [:transact [{:block/uid       parent-uid\n                           :edit/time       now\n                           :block/children  [{:block/order  0\n                                              :block/uid    new-uid\n                                              :block/open   true\n                                              :block/string \"\"}]}]])\n    (dispatch [:editing/uid new-uid])))\n\n\n;;; Components\n\n(defn placeholder-block-el\n  [parent-uid]\n  [:div {:class \"block-container\"}\n   [:div {:style {:display \"flex\"}}\n    [:span (use-style bullet-style)]\n    [:span {:on-click #(handle-new-first-child-block-click parent-uid)} \"Click here to add content...\"]]])\n\n\n;; TODO: where to put page-level link filters?\n(defn node-page-el\n  [_ _ _ _]\n  (let [state (r/atom {:menu/show false\n                       :menu/x nil\n                       :menu/y nil})]\n    (fn [block editing-uid ref-groups timeline-page?]\n      (let [{:block/keys [children uid] title :node/title is-shortcut? :page/sidebar} block\n            {:menu/keys [show x y]} @state]\n\n        [:div (use-style page-style {:class [\"node-page\"]})\n         ;; TODO: implement timeline\n         ;;(when timeline-page?\n         ;;  [button {:on-click #(dispatch [:jump-to-timeline uid])}\n         ;;              [:<>\n         ;;               [:mui-icons Left]\n         ;;               [:span \"Timeline\"]]}])\n\n         ;; Header\n         [:h1 (use-style title-style\n                         {:data-uid uid\n                          :class    \"page-header\"\n                          :on-click (fn [e] (navigate-uid uid e))})\n          (when-not timeline-page?\n            [autosize/textarea\n             {:default-value title\n              :class         (when (= editing-uid uid) \"is-editing\")\n              :auto-focus    true\n              :on-change     (fn [e] (db-handler (.. e -target -value) uid))}])\n          [button {:class    [(when show \"active\")]\n                   :on-click (fn [e]\n                               (if show\n                                 (swap! state assoc :menu/show false)\n                                 (let [rect (.. e -target getBoundingClientRect)]\n                                   (swap! state merge {:menu/show true\n                                                       :menu/x    (.. rect -left)\n                                                       :menu/y    (.. rect -bottom)}))))\n                   :style    page-menu-toggle-style}\n           [:> mui-icons/ExpandMore]]\n\n          (when show\n            [:div (merge (use-style dropdown-style)\n                         {:style {:font-size \"14px\"\n                                  :position \"fixed\"\n                                  :left (str x \"px\")\n                                  :top (str y \"px\")}})\n             [:div (use-style menu-style)\n              (if is-shortcut?\n                [button {:on-click #(dispatch [:page/remove-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/BookmarkBorder]\n                  [:span \"Remove Shortcut\"]]]\n                [button {:on-click #(dispatch [:page/add-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/Bookmark]\n                  [:span \"Add Shortcut\"]]])\n              [:hr (use-style menu-separator-style)]\n              [button {:on-click #(do\n                                    (navigate :pages)\n                                    (dispatch [:page/delete uid]))}\n               [:<> [:> mui-icons/Delete] [:span \"Delete Page\"]]]]])\n          (parse-renderer/parse-and-render title uid)]\n\n         ;; Children\n         (if (empty? children)\n           [placeholder-block-el uid]\n           [:div\n            (for [{:block/keys [uid] :as child} children]\n              ^{:key uid}\n              [block-el child])])\n\n\n         ;; References\n         (doall\n           (for [[linked-or-unlinked refs] ref-groups]\n             (when (not-empty refs)\n               [:section (use-style references-style {:key linked-or-unlinked})\n                [:h4 (use-style references-heading-style)\n                 [(r/adapt-react-class mui-icons/Link)]\n                 [:span linked-or-unlinked]\n                 [button {:disabled true} [(r/adapt-react-class mui-icons/FilterList)]]]\n                [:div (use-style references-list-style)\n                 (doall\n                   (for [[group-title group] refs]\n                     [:div (use-style references-group-style {:key (str \"group-\" group-title)})\n                      [:h4 (use-style references-group-title-style)\n                       [:a {:on-click #(navigate-uid (:block/uid @(pull-node-from-string group-title)))} group-title]]\n                      (doall\n                        (for [{:block/keys [uid parents] :as block} group]\n                          [:div (use-style references-group-block-style {:key (str \"ref-\" uid)})\n                           ;; TODO: expand parent on click\n                           [block-el block]\n                           (when (> (count parents) 1)\n                             [breadcrumbs-list {:style reference-breadcrumbs-style}\n                              [(r/adapt-react-class mui-icons/LocationOn)]\n                              (doall\n                                (for [{:keys [node/title block/string block/uid]} parents]\n                                  [breadcrumb {:key (str \"breadcrumb-\" uid) :on-click #(navigate-uid uid)} (or title string)]))])]))]))]])))]))))\n\n\n(defn node-page-component\n  \"One diff between datascript and posh: we don't have pull in q for posh\n  https://github.com/mpdairy/posh/issues/21\"\n  [ident]\n  (let [{:keys [block/uid node/title] :as node} (db/get-node-document ident)\n        editing-uid @(subscribe [:editing/uid])\n        timeline-page? (is-timeline-page uid)]\n    (when-not (string/blank? title)\n      ;; TODO: let users toggle open/close references\n      (let [ref-groups [[\"Linked References\" (get-linked-references (escape-str title))]\n                        [\"Unlinked References\" (get-unlinked-references (escape-str title))]]]\n        [node-page-el node editing-uid ref-groups timeline-page?]))))\n"]}