{"version":3,"sources":["athens/views/node_page.cljs"],"mappings":"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","names":["athens.views.node-page/page-style","athens.views.node-page/title-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","garden.selectors/+","athens.views.node-page/references-style","athens.views.node-page/references-heading-style","athens.views.node-page/references-list-style","athens.views.node-page/references-group-title-style","athens.views.node-page/references-group-style","athens.style.color.cljs$core$IFn$_invoke$arity$2","athens.views.node-page/reference-breadcrumbs-style","athens.views.node-page/references-group-block-style","athens.views.node-page/page-menu-toggle-style","athens.views.node-page/handler","val","uid","G__58568","re-frame.core/dispatch","athens.views.node-page/db-handler","goog.functions/debounce","cljs.core/deref","athens.views.node-page/get-ref-ids","pattern","G__58569","G__58570","G__58571","posh.reagent/q","athens.db/dsdb","athens.views.node-page/merge-parents-and-block","ref-ids","parents","cljs.core/reduce-kv","m","_","v","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","athens.db/get-parents-recursively","blocks","cljs.core.map.cljs$core$IFn$_invoke$arity$2","id","athens.db/get-block-document","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","block","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.views.node-page/group-by-parent","cljs.core/group-by","x","cljs.core/first","athens.views.node-page/get-data","cljs.core/seq","athens.views.node-page/is-timeline-page","cljs.core/boolean","e58572","vec__58573","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","d","y","clojure.string.split.cljs$core$IFn$_invoke$arity$2","tick.alpha.api.date.cljs$core$IFn$_invoke$arity$1","clojure.string.join.cljs$core$IFn$_invoke$arity$2","js/Object","athens.views.node-page/node-page-el","state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","editing-uid","ref-groups","timeline-page?","map__58576","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","map__58577","children","title","is-shortcut?","show","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","komponentit.autosize/textarea","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","e","G__58580","G__58581","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","rect","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/merge","js/module$node_modules$$material_ui$icons$index.ExpandMore","G__58582","js/module$node_modules$$material_ui$icons$index.BookmarkBorder","G__58583","js/module$node_modules$$material_ui$icons$index.Bookmark","js/module$node_modules$$material_ui$icons$index.Delete","athens.parse-renderer/parse-and-render","iter__4582__auto__","s__58585","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__58587","cljs.core/chunk-buffer","i__58586","map__58588","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__58584","cljs.core/chunk-rest","map__58590","cljs.core/cons","cljs.core/rest","child","athens.views.blocks/block-el","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","s__58593","b__58595","i__58594","vec__58596","iter__58592","vec__58657","linked-or-unlinked","refs","cljs.core/not-empty","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.Link","athens.views.buttons/button","js/module$node_modules$$material_ui$icons$index.FilterList","s__58600","b__58602","i__58601","vec__58603","iter__58599","vec__58630","s__58661","b__58663","i__58662","vec__58664","iter__58660","vec__58691","group-title","group","athens.router.navigate_uid.cljs$core$IFn$_invoke$arity$1","s__58607","b__58609","i__58608","map__58610","iter__58606","map__58620","s__58634","b__58636","i__58635","map__58637","iter__58633","map__58647","s__58668","b__58670","i__58669","map__58671","iter__58667","map__58681","s__58695","b__58697","i__58696","map__58698","iter__58694","map__58708","athens.views.breadcrumbs/breadcrumbs-list","js/module$node_modules$$material_ui$icons$index.LocationOn","s__58613","b__58615","i__58614","map__58616","iter__58612","map__58618","s__58623","b__58625","i__58624","map__58626","iter__58622","map__58628","s__58640","b__58642","i__58641","map__58643","iter__58639","map__58645","s__58650","b__58652","i__58651","map__58653","iter__58649","map__58655","s__58674","b__58676","i__58675","map__58677","iter__58673","map__58679","s__58684","b__58686","i__58685","map__58687","iter__58683","map__58689","s__58701","b__58703","i__58702","map__58704","iter__58700","map__58706","s__58711","b__58713","i__58712","map__58714","iter__58710","map__58716","string","athens.views.breadcrumbs/breadcrumb","or__4185__auto__","athens.views.node-page/node-page-component","ident","map__58718","node","athens.db/get-node-document","G__58720","re-frame.core/subscribe","clojure.string/blank?","athens.patterns/linked","athens.patterns/unlinked","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.node-page\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.parse-renderer :as parse-renderer]\n    [athens.patterns :as patterns]\n    [athens.router :refer [navigate-uid]]\n    [athens.style :refer [color]]\n    [athens.views.blocks :refer [block-el]]\n    [athens.views.breadcrumbs :refer [breadcrumbs-list breadcrumb]]\n    [athens.views.buttons :refer [button]]\n    ;;[athens.views.dropdown :refer [page-menu-component]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [clojure.string :as string]\n    [garden.selectors :as selectors]\n    [goog.functions :refer [debounce]]\n    [komponentit.autosize :as autosize]\n    [posh.reagent :refer [#_pull q]]\n    [re-frame.core :refer [dispatch subscribe]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]\n    [tick.alpha.api :as t]))\n\n\n;;; Styles\n\n\n(def page-style\n  {:margin \"2rem auto\"\n   :padding \"1rem 2rem\"\n   :flex-basis \"100%\"\n   :max-width \"55rem\"})\n\n\n(def title-style\n  {:position \"relative\"\n   :overflow \"visible\"\n   :flex-grow \"1\"\n   :margin \"0.2em 0 0.2em 1rem\"\n   :letter-spacing \"-0.03em\"\n   :word-break \"break-word\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor \"text\"\n                                 :resize \"none\"\n                                 :transform \"translate3d(0,0,0)\"\n                                 :color \"inherit\"\n                                 :font-weight \"inherit\"\n                                 :padding \"0\"\n                                 :letter-spacing \"inherit\"\n                                 :position \"absolute\"\n                                 :top \"0\"\n                                 :left \"0\"\n                                 :right \"0\"\n                                 :width \"100%\"\n                                 :min-height \"100%\"\n                                 :caret-color (color :link-color)\n                                 :background \"transparent\"\n                                 :margin \"0\"\n                                 :font-size \"inherit\"\n                                 :line-height \"inherit\"\n                                 :border-radius \"0.25rem\"\n                                 :transition \"opacity 0.15s ease\"\n                                 :border \"0\"\n                                 :opacity \"0\"\n                                 :font-family \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index 3\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [(selectors/+ :.is-editing :span) {:opacity 0}]]})\n\n\n(def references-style {:margin-block \"3em\"})\n\n\n(def references-heading-style\n  {:font-weight \"normal\"\n   :display \"flex\"\n   :padding \"0 2rem\"\n   :align-items \"center\"\n   ::stylefy/manual [[:svg {:margin-right \"0.25em\"\n                            :font-size \"1rem\"}]\n                     [:span {:flex \"1 1 100%\"}]]})\n\n\n(def references-list-style\n  {:font-size \"14px\"})\n\n\n(def references-group-title-style\n  {:color (color :link-color)\n   :margin \"0 1.5rem\"\n   :font-weight \"500\"\n   ::stylefy/manual [[:a:hover {:cursor \"pointer\"\n                                :text-decoration \"underline\"}]]})\n\n\n(def references-group-style\n  {:background (color :background-minus-2 :opacity-med)\n   :padding \"1rem 0.5rem\"\n   :border-radius \"0.25rem\"\n   :margin \"0.5em 0\"})\n\n\n(def reference-breadcrumbs-style\n  {:font-size \"12px\"\n   :padding \"0.25rem calc(2rem - 0.5em)\"})\n\n\n(def references-group-block-style\n  {:border-top [[\"1px solid \" (color :border-color)]]\n   :padding-block-start \"1em\"\n   :margin-block-start \"1em\"\n   ::stylefy/manual [[:&:first-of-type {:border-top \"0\"\n                                        :margin-block-start \"0\"}]]})\n\n\n(def page-menu-toggle-style\n  {:position \"absolute\"\n   :left \"-0.5rem\"\n   :border-radius \"1000px\"\n   :padding \"0.375rem 0.5rem\"\n   :color (color :body-text-color :opacity-high)\n   :top \"50%\"\n   :transform \"translate(-100%, -50%)\"})\n\n\n;;; Helpers\n\n\n(defn handler\n  [val uid]\n  (dispatch [:transact [[:db/add [:block/uid uid] :node/title val]]]))\n\n\n(def db-handler (debounce handler 500))\n\n\n(defn get-ref-ids\n  [pattern]\n  @(q '[:find [?e ...]\n        :in $ ?regex\n        :where\n        [?e :block/string ?s]\n        [(re-find ?regex ?s)]]\n      db/dsdb\n      pattern))\n\n\n(defn merge-parents-and-block\n  [ref-ids]\n  (let [parents (reduce-kv (fn [m _ v] (assoc m v (db/get-parents-recursively v)))\n                           {}\n                           ref-ids)\n        blocks (map (fn [id] (db/get-block-document id)) ref-ids)]\n    (mapv\n      (fn [block]\n        (merge block {:block/parents (get parents (:db/id block))}))\n      blocks)))\n\n\n(defn group-by-parent\n  [blocks]\n  (group-by (fn [x]\n              (-> x\n                  :block/parents\n                  first\n                  :node/title))\n            blocks))\n\n\n(defn get-data\n  [pattern]\n  (-> pattern get-ref-ids merge-parents-and-block group-by-parent seq))\n\n\n(defn is-timeline-page\n  [uid]\n  (boolean\n    (try\n      (let [[m d y] (string/split uid \"-\")]\n        (t/date (string/join \"-\" [y m d])))\n      (catch js/Object _ false))))\n\n\n;;; Components\n\n\n;; TODO: where to put page-level link filters?\n(defn node-page-el\n  [_ _ _ _]\n  (let [state (r/atom {:menu/show false\n                       :menu/x nil\n                       :menu/y nil})]\n    (fn [block editing-uid ref-groups timeline-page?]\n      (let [{:block/keys [children uid] title :node/title is-shortcut? :page/sidebar} block\n            {:menu/keys [show x y]} @state]\n\n        [:div (use-style page-style {:class [\"node-page\"]})\n         ;; TODO: implement timeline\n         ;;(when timeline-page?\n         ;;  [button {:on-click #(dispatch [:jump-to-timeline uid])}\n         ;;              [:<>\n         ;;               [:mui-icons Left]\n         ;;               [:span \"Timeline\"]]}])\n\n         ;; Header\n         [:h1 (use-style title-style {:data-uid uid :class \"page-header\"})\n          (when-not timeline-page?\n            [autosize/textarea\n             {:default-value title\n              :class         (when (= editing-uid uid) \"is-editing\")\n              :auto-focus    true\n              :on-change     (fn [e] (db-handler (.. e -target -value) uid))}])\n          [:button.button {:class    [(when show \"active\")]\n                           :on-click (fn [e]\n                                       (if show\n                                         (swap! state assoc :menu/show false)\n                                         (let [rect (.. e -target getBoundingClientRect)]\n                                           (swap! state merge {:menu/show true\n                                                               :menu/x    (.. rect -left)\n                                                               :menu/y    (.. rect -bottom)}))))\n                           :style    page-menu-toggle-style}\n           [:> mui-icons/ExpandMore]]\n\n          (when show\n            [:div.dropdown {:style {:font-size \"14px\"\n                                    :position \"fixed\"\n                                    :left (str x \"px\")\n                                    :top (str y \"px\")}}\n             [:div.menu\n              (if is-shortcut?\n                [:button.menu-item {:on-click #(dispatch [:page/remove-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/BookmarkBorder]\n                  [:span \"Remove Shortcut\"]]]\n                [:button.menu-item {:on-click #(dispatch [:page/add-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/Bookmark]\n                  [:span \"Add Shortcut\"]]])\n              [:hr.menu-separator]\n              [:button.menu-item {:disabled true}\n               [:<> [:> mui-icons/Delete] [:span \"Delete Page\"]]]]])\n          (parse-renderer/parse-and-render title uid)]\n\n         ;; Children\n         [:div\n          (for [{:block/keys [uid] :as child} children]\n            ^{:key uid}\n            [block-el child])]\n\n         ;; References\n         (doall\n           (for [[linked-or-unlinked refs] ref-groups]\n             (when (not-empty refs)\n               [:section (use-style references-style {:key linked-or-unlinked})\n                [:h4 (use-style references-heading-style)\n                 [(r/adapt-react-class mui-icons/Link)]\n                 [:span linked-or-unlinked]\n                 [button {:disabled true} [(r/adapt-react-class mui-icons/FilterList)]]]\n                [:div (use-style references-list-style)\n                 (doall\n                   (for [[group-title group] refs]\n                     [:div (use-style references-group-style {:key (str \"group-\" group-title)})\n                      [:h4 (use-style references-group-title-style)\n                       [:a {:on-click #(navigate-uid uid)} group-title]] ;; FIXME: use correct uid\n                      (doall\n                        (for [{:block/keys [uid parents] :as block} group]\n                          [:div (use-style references-group-block-style {:key (str \"ref-\" uid)})\n                           ;; TODO: expand parent on click\n                           [block-el block]\n                           (when (> (count parents) 1)\n                             [breadcrumbs-list {:style reference-breadcrumbs-style}\n                              [(r/adapt-react-class mui-icons/LocationOn)]\n                              (doall\n                                (for [{:keys [node/title block/string block/uid]} parents]\n                                  [breadcrumb {:key (str \"breadcrumb-\" uid) :on-click #(navigate-uid uid)} (or title string)]))])]))]))]])))]))))\n\n\n(defn node-page-component\n  \"One diff between datascript and posh: we don't have pull in q for posh\n  https://github.com/mpdairy/posh/issues/21\"\n  [ident]\n  (let [{:keys [block/uid node/title] :as node} (db/get-node-document ident)\n        editing-uid @(subscribe [:editing/uid])\n        timeline-page? (is-timeline-page uid)]\n    (when-not (string/blank? title)\n      ;; TODO: let users toggle open/close references\n      (let [ref-groups [[\"Linked References\" (-> title patterns/linked get-data)]\n                        [\"Unlinked References\" (-> title patterns/unlinked get-data)]]]\n        [node-page-el node editing-uid ref-groups timeline-page?]))))\n"]}