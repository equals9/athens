{"version":3,"sources":["athens/devcards/style_guide.cljs"],"mappings":";;;;;;;;AAaA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AASL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AAImC,AAAA,AAACC;AAMzC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAQL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AASL,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAAG;;AAAA,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAAE,AAAA,AAAA,AACQ,AAACY,AAAU,AAAA,AAAA,AAACP,AAAMxB,AAA+B,AAAA,AAAA,AAACgC,AACvD,AAACC,AACC,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AAg4E8C,AAAA4D,AAAAjE;AAh4E9CM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAN,AAAAK,AAAMU;AAAN,AAAA,AAAA,AAAAR,AAAAJ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSY,AACD,AAACxB,AAAU9B,AACW,AAACyD,AAAMH,AAC3BA,AACgB,AAACG,AAAMH,AAAK,AAACG,AAAMH;;AAL7C,AAAA,AAAAV,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAhB;;AAAA,AAAAa,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAjB,AAAMoB;AAAN,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAnB,AACSoB,AACD,AAACxB,AAAU9B,AACW,AAACyD,AAAMH,AAC3BA,AACgB,AAACG,AAAMH,AAAK,AAACG,AAAMH;;;AAL7C;;;;AAAA,AAAA;;AAAA,AAAA,AAAArB,AAAQ,AAACsB,AAAKC;;AAHnB,AAAA,AAAA,AAAArC,AAAAD;AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAAE,AAAAC;;;AAAA,AAAAC,AAAAJ;;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAR;;;AAAA,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAc,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAAG,AAAA,AAAAhB;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAaA,AAAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAAiD;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAA7C;;AAAA,AAAA,AAAA,AAAA6C,AAAA,AAAA5C,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAAE,AAAA,AAAA,AACQ,AAACY,AAAU/B,AAChB,AAACiC,AACC,AAAAC,AAAA,AAAA8B;AAAA,AAAA,AAAA5B,AAAA,AAAA;AAAA,AAAA,AAAA4B,AAAAA;;AAAA,AAAA,AAAA3B,AAAA,AAAAC,AAAA0B;AAAA,AAAA,AAAA3B;AAAA,AAAA,AAAA2B,AAAA3B;AAAA,AAAA,AAAA,AAAAE,AAAAyB;AAAA,AAAAxB,AAm3E8C,AAAA4D,AAAApC;AAn3E9CvB,AAAA,AAAAC,AAAAF;AAAAyB,AAAA,AAAArB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAyB,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAzB;AAAA,AAAA,AAAAK,AAAAN,AAAA0B,AAAME;AAAN,AAAA,AAAA,AAAArB,AAAAkB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSG,AACD,AAACrC,AAAU9B,AACQ,AAACmE,AAAAA,AAAAA,AAAEC,AAAAA,AACpBD;;AAJV,AAAA,AAAAF,AAAA;;;;AAAA;;;;;AAAA,AAAAlB,AAAA,AAAAC,AAAAgB,AAAA,AAAAE,AAAA,AAAAhB,AAAAa;;AAAA,AAAAhB,AAAA,AAAAC,AAAAgB,AAAA;;;AAAA,AAAA,AAAAb,AAAAY,AAAMI;AAAN,AAAA,AAAAf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAc,AAAA,AAAAb,AAAAU,AACSI,AACD,AAACrC,AAAU9B,AACQ,AAACmE,AAAAA,AAAAA,AAAEC,AAAAA,AACpBD;;;AAJV;;;;AAAA,AAAA;;AAAA,AAAA,AAAAlC,AAAQ,AAACsB,AAAKa;;AAHnB,AAAA,AAAA,AAAAjD,AAAAD;AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAAE,AAAAC;;;AAAA,AAAAC,AAAAJ;;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAR;;;AAAA,AAAA,AAAA2C,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAlC,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAAoC,AAAA,AAAAD;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAUA,AAAAtD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAA4D;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAAxD;;AAAA,AAAA,AAAA,AAAAwD,AAAA,AAAAvD,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAAE,AAAA,AAAA,AAEG,AAACc,AACC,AAAAC,AAAA,AAAAyC;AAAA,AAAA,AAAAvC,AAAA,AAAA;AAAA,AAAA,AAAAuC,AAAAA;;AAAA,AAAA,AAAAtC,AAAA,AAAAC,AAAAqC;AAAA,AAAA,AAAAtC;AAAA,AAAA,AAAAsC,AAAAtC;AAAA,AAAA,AAAA,AAAAE,AAAAoC;AAAA,AAAAnC,AAy2E8C,AAAA4D,AAAAzB;AAz2E9ClC,AAAA,AAAAC,AAAAF;AAAAoC,AAAA,AAAAhC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAoC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAApC;AAAA,AAAA,AAAAK,AAAAN,AAAAqC,AAAME;AAAN,AAAA,AAAA,AAAAhC,AAAA6B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSG,AACD,AAAChD,AAAU5B,AACT4E,AACNA,AAAwB,AAACC,AAAO3E;;AAJpC,AAAA,AAAAwE,AAAA;;;;AAAA;;;;;AAAA,AAAA7B,AAAA,AAAAC,AAAA2B,AAAA,AAAAE,AAAA,AAAA3B,AAAAwB;;AAAA,AAAA3B,AAAA,AAAAC,AAAA2B,AAAA;;;AAAA,AAAA,AAAAxB,AAAAuB,AAAMI;AAAN,AAAA,AAAA1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAyB,AAAA,AAAAxB,AAAAqB,AACSI,AACD,AAAChD,AAAU5B,AACT4E,AACNA,AAAwB,AAACC,AAAO3E;;;AAJpC;;;;AAAA,AAAA;;AAAA,AAAA,AAAA6B,AAAQ9B;;AAHb,AAAA,AAAA,AAAAgB,AAAAD;AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAAE,AAAAC;;;AAAA,AAAAC,AAAAJ;;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAR;;;AAAA,AAAA,AAAAsD,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAA7C,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAA+C,AAAA,AAAAD;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAUA,AAAAjE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAAuE;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAAnE;;AAAA,AAAA,AAAA,AAAAmE,AAAA,AAAAlE,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAAE,AAAA,AAAA,AAEG,AAACc,AACC,AAAAC,AAAA,AAAAoD;AAAA,AAAA,AAAAlD,AAAA,AAAA;AAAA,AAAA,AAAAkD,AAAAA;;AAAA,AAAA,AAAAjD,AAAA,AAAAC,AAAAgD;AAAA,AAAA,AAAAjD;AAAA,AAAA,AAAAiD,AAAAjD;AAAA,AAAA,AAAA,AAAAE,AAAA+C;AAAA,AAAA9C,AA+1E8C,AAAA4D,AAAAd;AA/1E9C7C,AAAA,AAAAC,AAAAF;AAAA+C,AAAA,AAAA3C,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA+C,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA/C;AAAA,AAAA,AAAAK,AAAAN,AAAAgD,AAAMT;AAAN,AAAA,AAAA,AAAAhC,AAAAwC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSR,AACD,AAAChD,AAAU5B,AACT4E,AACNA,AAAwB,AAAC3B,AAAM/C;;AAJnC,AAAA,AAAAmF,AAAA;;;;AAAA;;;;;AAAA,AAAAxC,AAAA,AAAAC,AAAAsC,AAAA,AAAAE,AAAA,AAAAtC,AAAAmC;;AAAA,AAAAtC,AAAA,AAAAC,AAAAsC,AAAA;;;AAAA,AAAA,AAAAnC,AAAAkC,AAAMP;AAAN,AAAA,AAAA1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAoC,AAAA,AAAAnC,AAAAgC,AACSP,AACD,AAAChD,AAAU5B,AACT4E,AACNA,AAAwB,AAAC3B,AAAM/C;;;AAJnC;;;;AAAA,AAAA;;AAAA,AAAA,AAAA6B,AAAQ9B;;AAHb,AAAA,AAAA,AAAAgB,AAAAD;AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAAE,AAAAC;;;AAAA,AAAAC,AAAAJ;;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAR;;;AAAA,AAAA,AAAAiE,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAxD,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAA0D,AAAA,AAAAD;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAUA,AAAA5E,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAAgF;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAA5E;;AAAA,AAAA,AAAA,AAAA4E,AAAA,AAAA3E,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAAE,AAAA,AAAA,AAEG,AAACc,AACC,AAAAC,AAAA,AAAA6D;AAAA,AAAA,AAAA3D,AAAA,AAAA;AAAA,AAAA,AAAA2D,AAAAA;;AAAA,AAAA,AAAA1D,AAAA,AAAAC,AAAAyD;AAAA,AAAA,AAAA1D;AAAA,AAAA,AAAA0D,AAAA1D;AAAA,AAAA,AAAA,AAAAE,AAAAwD;AAAA,AAAAvD,AAq1E8C,AAAA4D,AAAAL;AAr1E9CtD,AAAA,AAAAC,AAAAF;AAAAwD,AAAA,AAAApD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAwD,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAxD;AAAA,AAAA,AAAAK,AAAAN,AAAAyD,AAAMlB;AAAN,AAAA,AAAA,AAAAhC,AAAAiD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSjB,AACD,AAAChD,AAAU5B,AACT4E,AACNA,AAAwB,AAACoB,AAAK9F;;AAJlC,AAAA,AAAA4F,AAAA;;;;AAAA;;;;;AAAA,AAAAjD,AAAA,AAAAC,AAAA+C,AAAA,AAAAE,AAAA,AAAA/C,AAAA4C;;AAAA,AAAA/C,AAAA,AAAAC,AAAA+C,AAAA;;;AAAA,AAAA,AAAA5C,AAAA2C,AAAMhB;AAAN,AAAA,AAAA1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA6C,AAAA,AAAA5C,AAAAyC,AACShB,AACD,AAAChD,AAAU5B,AACT4E,AACNA,AAAwB,AAACoB,AAAK9F;;;AAJlC;;;;AAAA,AAAA;;AAAA,AAAA,AAAA6B,AAAQ9B;;AAHb,AAAA,AAAA,AAAAgB,AAAAD;AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAAE,AAAAC;;;AAAA,AAAAC,AAAAJ;;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAR;;;AAAA,AAAA,AAAA0E,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAjE,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAAmE,AAAA,AAAAD;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA","names":["athens.devcards.style-guide/color-group-style","athens.devcards.style-guide/color-item-style","athens.style.cssv.cljs$core$IFn$_invoke$arity$1","athens.devcards.style-guide/text-item-style","athens.devcards.style-guide/types","athens.devcards.style-guide/fonts","devcards.core/register-card","devcards.core/card-base","js/athens","js/athens.devcards","js/athens.devcards.style-guide","js/athens.devcards.style-guide.t_athens$devcards$style_guide61265","athens.devcards.style-guide/t_athens$devcards$style_guide61265","_61267","meta61266","cljs.core/PROTOCOL_SENTINEL","this__42242__auto__","devcard-opts__42243__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__42261__auto__","cljs.core/fn?","data-atom__42262__auto__","owner__42263__auto__","reagent.core/as-element","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devcards.core/assert-options-map","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards.style-guide/->t_athens$devcards$style_guide61265","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","athens.style.color.cljs$core$IFn$_invoke$arity$2","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","iter__4582__auto__","s__61269","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__61271","cljs.core/chunk-buffer","i__61270","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__61268","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","c","cljs.core/keys","athens.style/COLORS","athens.style.color.cljs$core$IFn$_invoke$arity$1","js/athens.devcards.style-guide.t_athens$devcards$style_guide61275","athens.devcards.style-guide/t_athens$devcards$style_guide61275","_61277","meta61276","athens.devcards.style-guide/->t_athens$devcards$style_guide61275","s__61279","b__61281","i__61280","iter__61278","o","athens.style/OPACITIES","js/athens.devcards.style-guide.t_athens$devcards$style_guide61282","athens.devcards.style-guide/t_athens$devcards$style_guide61282","_61284","meta61283","athens.devcards.style-guide/->t_athens$devcards$style_guide61282","s__61286","b__61288","i__61287","iter__61285","t","cljs.core/second","js/athens.devcards.style-guide.t_athens$devcards$style_guide61289","athens.devcards.style-guide/t_athens$devcards$style_guide61289","_61291","meta61290","athens.devcards.style-guide/->t_athens$devcards$style_guide61289","s__61293","b__61295","i__61294","iter__61292","js/athens.devcards.style-guide.t_athens$devcards$style_guide61296","athens.devcards.style-guide/t_athens$devcards$style_guide61296","_61298","meta61297","athens.devcards.style-guide/->t_athens$devcards$style_guide61296","s__61300","b__61302","i__61301","iter__61299","cljs.core/last","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.style-guide\n  (:require\n    [athens.db]\n    [athens.style :refer [color cssv COLORS OPACITIES]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :refer-macros [defcard-rg]]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def color-group-style\n  {:display \"grid\"\n   :padding \"1rem\"\n   :grid-template-columns \"repeat( auto-fit, minmax(9rem, 1fr))\"\n   :grid-gap \"3rem 1rem\"\n   :text-align \"center\"\n   :align-items \"center\"})\n\n\n(def color-item-style\n  {:display \"grid\"\n   :grid-gap \"0.25rem\"\n   ::stylefy/manual [[:div {:border-radius \"1000px\"\n                            :background (cssv \"link-color\")\n                            :height \"4rem\"\n                            :margin \"auto\"\n                            :width \"4rem\"}]]})\n\n\n(def text-item-style\n  {:display \"flex\"\n   :justify-content \"space-between\"})\n\n\n;;; Components\n\n\n(def types [:h1 :h2 :h3 :h4 :h5 :span :span.block-ref])\n\n\n(def fonts\n  [[\"IBM Plex Serif\" \"serif\"]\n   [\"IBM Plex Sans\" \"sans-serif\"]\n   [\"IBM Plex Mono\" \"monospace\"]])\n\n\n;;; Devcards\n\n\n(defcard-rg Colors\n  [:div (use-style (merge color-group-style {:background (color :body-text-color :opacity-low)}))\n   (doall\n     (for [c (keys COLORS)]\n       ^{:key c}\n       [:div (use-style color-item-style)\n        [:div {:style {:background (color c) :box-shadow \"0 0 0 1px rgba(0,0,0,0.15)\"}}]\n        [:span c]\n        [:span {:style {:color (color c)}} (color c)]]))]\n  {}\n  {:padding false})\n\n\n(defcard-rg Opacities\n  [:div (use-style color-group-style)\n   (doall\n     (for [o (keys OPACITIES)]\n       ^{:key o}\n       [:div (use-style color-item-style)\n        [:div {:style {:opacity (o OPACITIES)}}]\n        [:span o]]))])\n\n\n(defcard-rg Sans-Types\n  [:div\n   (doall\n     (for [t types]\n       ^{:key t}\n       [:div (use-style text-item-style)\n        [:span t]\n        [t {:style {:font-family (second fonts)}} \"Welcome to Athens\"]]))])\n\n\n(defcard-rg Serif-Types\n  [:div\n   (doall\n     (for [t types]\n       ^{:key t}\n       [:div (use-style text-item-style)\n        [:span t]\n        [t {:style {:font-family (first fonts)}} \"Welcome to Athens\"]]))])\n\n\n(defcard-rg Monospace-Types\n  [:div\n   (doall\n     (for [t types]\n       ^{:key t}\n       [:div (use-style text-item-style)\n        [:span t]\n        [t {:style {:font-family (last fonts)}} \"Welcome to Athens\"]]))])\n"]}