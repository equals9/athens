{"version":3,"sources":["athens/listeners.cljs"],"mappings":"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","names":["athens.listeners/mouse-down-bullet","e","class-list","cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1","p1__60546#","cljs.core/some","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","start-pos","uid","on-move","athens.listeners/mouse-move-bullet","goog.events/listen","js/window","goog.events.EventType/MOUSEMOVE","G__60547","G__60548","G__60549","goog.events.EventType/MOUSEUP","athens.listeners/mouse-up-bullet","cX","cY","x","y","closest-child","js/document.elementFromPoint","closest-sibling","closest-child-uid","closest-sibling-uid","closest-uid","or__4185__auto__","closest-kind","G__60550","re-frame.core/dispatch","_evt","map__60551","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","kind","target-uid","G__60552","re-frame.core/subscribe","G__60554","G__60555","goog.events/unlisten","athens.listeners/mouse-down-block","closest-block","closest-block-header","closest-page-header","closest","G__60556","athens.listeners/mouse-over-bullet","tooltip-uid","G__60558","p1__60557#","G__60559","G__60560","athens.listeners/mouse-down-outside-athena","athena?","G__60561","and__4174__auto__","G__60562","athens.listeners/key-down","key","_ctrl","meta","shift","goog.events.KeyCodes/Z","G__60563","G__60564","goog.events.KeyCodes/K","G__60565","athens.listeners/init","goog.events.EventType/MOUSEDOWN","goog.events.EventType/MOUSEOVER","goog.events.EventType/KEYDOWN"],"sourcesContent":["(ns athens.listeners\n  (:require\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [goog.events :as events]\n    [re-frame.core :refer [dispatch subscribe]])\n  (:import\n    (goog.events\n      EventType\n      KeyCodes)))\n\n\n;;; Drag Bullet to Re-order Block\n\n\n(declare mouse-move-bullet mouse-up-bullet)\n\n\n(defn mouse-down-bullet\n  [e]\n  (let [class-list (-> (.. e -target -classList) array-seq)]\n    (when (some #(= \"bullet\" %) class-list)\n      (let [start-pos {:x (.-clientX e)\n                       :y (.-clientY e)}\n            uid (.. e -target -dataset -uid)\n            on-move (mouse-move-bullet start-pos uid)]\n        (events/listen js/window EventType.MOUSEMOVE on-move)\n        (events/listen js/window EventType.MOUSEUP (mouse-up-bullet on-move))))))\n\n\n(defn mouse-move-bullet\n  \"Must set hidden to true for bullet, otherwise bullet is captured when calling `elementFromPoint`.\n  Closest child always takes precedent over closest sibling, because .block-contents is nested within .block-container.\n  `cljs-oops` provides macros that let you bypass null `when` checks\"\n  [start-pos uid]\n  (fn [e]\n    (let [cX (.-clientX e)\n          cY (.-clientY e)\n          x (- cX (:x start-pos))\n          y (- cY (:y start-pos))]\n      (set! (.. e -target -hidden) true)\n      (let [closest-child   (.. (js/document.elementFromPoint cX cY) (closest \".block-contents\"))\n            closest-sibling (.. (js/document.elementFromPoint cX cY) (closest \".block-container\"))\n            closest-child-uid (when closest-child (.. closest-child -dataset -uid))\n            closest-sibling-uid (when closest-sibling (.. closest-sibling -dataset -uid))\n            closest-uid (or closest-child-uid closest-sibling-uid)\n            closest-kind (cond closest-child-uid   :child\n                               closest-sibling-uid :sibling)]\n        (set! (.. e -target -hidden) false)\n        (dispatch [:drag-bullet\n                   {:x            x\n                    :y            y\n                    :uid          uid\n                    :closest/uid  closest-uid\n                    :closest/kind closest-kind}])))))\n\n\n(defn mouse-up-bullet\n  [on-move]\n  (fn [_evt]\n    (let [{:keys [uid closest/kind] target-uid :closest/uid} @(subscribe [:drag-bullet])]\n      (when target-uid\n        (dispatch [:drop-bullet {:source uid :target target-uid :kind kind}]))\n      (dispatch [:drag-bullet {}])\n      ;; FIXME: after the first time `empty` is called, selection stays empty\n      ;;(.. (js/document.getSelection) empty)\n      (events/unlisten js/window EventType.MOUSEMOVE on-move))))\n\n\n;;; Turn read block or header into editable on mouse down\n\n\n(defn mouse-down-block\n  [e]\n  ;; Consider refactor if we add more editable targets\n  (let [closest-block (.. e -target (closest \".block-contents\"))\n        closest-block-header (.. e -target (closest \".block-header\"))\n        closest-page-header (.. e -target (closest \".page-header\"))\n        closest (or closest-block closest-block-header closest-page-header)]\n    (when closest\n      (dispatch [:editing-uid (.. closest -dataset -uid)]))))\n\n\n;;; Show tooltip\n\n\n(defn mouse-over-bullet\n  [e]\n  (let [class-list (array-seq (.. e -target -classList))\n        closest (.. e -target (closest \".tooltip\"))\n        uid (.. e -target -dataset -uid)\n        tooltip-uid @(subscribe [:tooltip-uid])]\n    (cond\n      ;; if mouse over bullet, show tooltip\n      (some #(= \"bullet\" %) class-list) (dispatch [:tooltip-uid uid])\n      ;; if mouse over a child of bullet, keep tooltip-uid\n      closest nil\n      ;; if tooltip is already nil, don't overwrite tooltip-uid\n      (nil? tooltip-uid) nil\n      ;; otherwise mouse is no longer over a bullet or tooltip. clear the tooltip-uid\n      :else (dispatch [:tooltip-uid nil]))))\n\n\n;;; Close Athena\n\n\n(defn mouse-down-outside-athena\n  [e]\n  (let [athena? @(subscribe [:athena])\n        closest (.. e -target (closest \".athena\"))]\n    (when (and athena? (nil? closest))\n      (dispatch [:toggle-athena]))))\n\n\n;;; Hotkeys\n\n(defn key-down\n  [e]\n  (let [key (.. e -keyCode)\n        _ctrl (.. e -ctrlKey)\n        meta (.. e -metaKey)\n        shift (.. e -shiftKey)]\n\n    (cond\n      (and (= key KeyCodes.Z) meta shift)\n      (dispatch [:redo])\n\n      (and (= key KeyCodes.Z) meta)\n      (dispatch [:undo])\n\n      (and (= key KeyCodes.K) meta)\n      (dispatch [:toggle-athena]))))\n\n\n(defn init\n  []\n  (events/listen js/window EventType.MOUSEDOWN mouse-down-block)\n  (events/listen js/window EventType.MOUSEDOWN mouse-down-bullet)\n  (events/listen js/window EventType.MOUSEOVER mouse-over-bullet)\n  (events/listen js/window EventType.MOUSEDOWN mouse-down-outside-athena)\n  (events/listen js/window EventType.KEYDOWN key-down))\n"]}