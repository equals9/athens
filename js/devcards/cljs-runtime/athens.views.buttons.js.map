{"version":3,"sources":["athens/views/buttons.cljs"],"mappings":"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","names":["athens.views.buttons/button-icons-style","athens.views.buttons/button-icons-not-last-child-style","athens.views.buttons/button-icons-not-first-child-style","athens.views.buttons/button-icons-only-child-style","athens.views.buttons/buttons-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","garden.color/darken","athens.style.color.cljs$core$IFn$_invoke$arity$2","G__39108","garden.selectors/&","G__39109","garden.selectors/not","garden.selectors/last-child","G__39110","G__39111","garden.selectors/first-child","G__39112","fexpr__39114","G__39115","athens.views.buttons/buttons-primary-style","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__39116","G__39117","G__39118","G__39119","G__39120","fexpr__39122","G__39123","var_args","G__39125","athens.views.buttons/new-button","js/Error","p__39126","map__39127","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","children","style","active","class","props","props-","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","cljs.core/vec","cljs.core/flatten","p__39129","map__39130","athens.views.buttons/button","disabled","label","on-click-fn","p__39132","map__39133","athens.views.buttons/button-primary"],"sourcesContent":["(ns athens.views.buttons\n  (:require\n    [athens.db]\n    [athens.style :refer [color]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [garden.color :refer [darken]]\n    [garden.selectors :as selectors]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def button-icons-style\n  {:margin-block-start \"-0.0835em\"\n   :margin-block-end \"-0.0835em\"})\n\n\n(def button-icons-not-last-child-style {:margin-inline-end \"0.251em\"})\n\n(def button-icons-not-first-child-style {:margin-inline-style \"0.251em\"})\n\n\n(def button-icons-only-child-style\n  {:margin-inline-start \"-4px\"\n   :margin-inline-end \"-4px\"})\n\n\n(def buttons-style\n  {:cursor \"pointer\"\n   :padding          \"0.375rem 0.625rem\"\n   :margin           \"0\"\n   :font-family      \"inherit\"\n   :font-size        \"inherit\"\n   :border-radius    \"4px\"\n   :font-weight      \"500\"\n   :border           \"none\"\n   :display          \"inline-flex\"\n   :align-items      \"center\"\n   :color            (color :body-text-color)\n   :background-color \"transparent\"\n   :transition       \"all 0.075s ease\"\n   ::stylefy/manual [[:&:hover {:background (darken (color :panel-color :opacity-low) 10)}]\n                     [:&:active\n                      :&:hover:active\n                      :&.is-active {:color (color :body-text-color)\n                                    :background-color  (darken (color :panel-color :opacity-med) 10)}]\n                     [:&:disabled :&:disabled:active {:color (color :body-text-color 0.3)\n                                                      :background-color (color :panel-color :opacity-higher)\n                                                      :cursor \"default\"}]\n                     [:span {:flex \"1 0 auto\"\n                             :text-align \"left\"}]\n                     [:.MuiSvgIcon-root button-icons-style\n                      [(selectors/& (selectors/not (selectors/last-child))) button-icons-not-last-child-style]\n                      [(selectors/& (selectors/not (selectors/first-child))) button-icons-not-first-child-style]\n                      [(selectors/& ((selectors/first-child (selectors/last-child)))) button-icons-only-child-style]]]})\n\n\n(def buttons-primary-style\n  (merge buttons-style {:color (color :link-color)\n                        :background-color (color :link-color :opacity-lower)\n                        ::stylefy/manual [[:&:hover {:background (color :link-color :opacity-low)}]\n                                          [:&:active\n                                           :&:hover:active\n                                           :&.is-active {:color \"white\"\n                                                         :background-color (color :link-color)}]\n                                          [:&:disabled :&:disabled:active {:color (color :body-text-color 0.3)\n                                                                           :background-color (color :panel-color :opacity-higher)\n                                                                           :cursor \"default\"}]\n                                          [:span {:flex \"1 0 auto\"\n                                                  :text-align \"left\"}]\n                                          [:.MuiSvgIcon-root button-icons-style\n                                           [(selectors/& (selectors/not (selectors/last-child))) button-icons-not-last-child-style]\n                                           [(selectors/& (selectors/not (selectors/first-child))) button-icons-not-first-child-style]\n                                           [(selectors/& ((selectors/first-child (selectors/last-child)))) button-icons-only-child-style]]]}))\n\n\n;;; Components\n\n(defn new-button\n  \"Keep button interface as close to vanilla hiccup as possible.\n  Dissoc :style :active and :class because we don't want to merge them in directly.\n  Can pass in a :key prop to make react happy, as a :key or ^{:key}. Just works\"\n  ([children] [new-button {} children])\n  ([{:keys [style active class] :as props} children]\n   (let [props- (dissoc props :style :active :class)]\n     [:button (use-style (merge buttons-style style)\n                (merge props- {:class (vec (flatten [(when active \"is-active\") class]))}))\n      children])))\n\n\n(defn button\n  \"Creates a button control\"\n  [{:keys [disabled label on-click-fn style active class]}]\n  [:button (use-style (merge buttons-style style) {:disabled disabled\n                                                   :on-click on-click-fn\n                                                   :class [class (when active \"is-active\")]})\n   label])\n\n\n(defn button-primary\n  \"Creates a button control\"\n  [{:keys [disabled label on-click-fn style active class]}]\n  [:button (use-style (merge buttons-primary-style style) {:disabled disabled\n                                                           :on-click on-click-fn\n                                                           :class [class (when active \"is-active\")]})\n   label])\n"]}